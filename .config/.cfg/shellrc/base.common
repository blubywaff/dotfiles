#!/bin/bash
# ^^^^^^^^^ only present for editor hint
# file should not be executed

shopt -s histappend
HISTSIZE=1000
HISTFILESIZE=2000
HISTCONTROL=ignoreboth

shopt -s checkwinsize
shopt -s globstar

# Shamelessly stolen from default bashrc on Ubuntu 22.04
# enables programmable completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

_gitbranch() {
    color_regular="\001\e[38;5;69m\002"
    color_detached="\001\e[38;5;196m\002"
    color_dirt="\001\e[38;5;190m\002"
    branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null || echo "")
    dirt=""
    if [ -z $branch ]; then
        return
    fi
    gst="$(2>&1 timeout -v 0.2s git status --porcelain)"
    if ! [ -z "$(echo "$gst" | grep "timeout: sending signal" | sed -z "s/\n//g")" ]; then
        dirt="$color_dirt?$color_regular"
    elif ! [ -z "$gst" ]; then
        dirt="$color_dirt+$color_regular"
    fi
    if [[ $branch = "HEAD" ]]; then
        echo -ne "$color_detached($(git rev-parse --short HEAD 2> /dev/null)$dirt)"
        return
    fi
    echo -ne "$color_regular($branch$dirt)"
}

_cpos() {
    ttysets="$(stty -g)"
    stty -icanon -echo
    echo -ne '\e[6n' > /dev/tty
    IFS=';' read -s -d R -p '' ROW COL < /dev/tty
    stty ${ttysets}
}

_optlf() {
    if [ $COL != 1 ]; then
        echo -ne "\n\\"
    else
        echo -ne " "
    fi
}

_PRE_PROMPT() {
    _cpos

    # working directory as displayed by \w
    wd=${PWD/$HOME/\~}
    # number of parts in wd
    parts=${wd//[^\/]}
    parts=${#parts}
    # early return if there's nothing to trim
    PROMPT_DIRTRIM=$(( $parts ))
    if (( $parts < 2 )); then
        return;
    fi
    # array of all of the parts of wd
    IFS='/' read -ra parr <<< "${wd#/}"
    # the number of columns required to display
    # this directory component (and all after)
    # doesn't handle wide/unicode well
    # (in reverse order)
    rcd=( $(( ${#parr[-1]} + 4 )) )
    # for root /A/B/C/D shorts to ../D
    if [[ $wd == '~'* ]]; then
        # for else ~/A/B/C/D shorts to ~/../D
        rcd=( $(( ${#parr[-1]} + 6 )) )
    fi
    # progressively compute 
    for (( idx=${#parr[@]}-2; idx >= 0; --idx )); do
        rcd+=( $(( ${rcd[-1]} + ${#parr[$idx]} + 1 )) )
    done
    if [[ wd = '~'* ]]; then
        # ~/.../A/B -> ~/A/B
        rcd[-2]=$(( ${rcd[-2]} - 4 ))
        # displaying the tilde is required
        rcd[-1]=${rcd[-2]}
    else
        # .../A/B -> /A/B
        rcd[-1]=$(( ${rcd[-1]} - 3 ))
    fi
    # available columns after user, hostname, jobs
    # and timestamp have been printed
    avl=$(($COLUMNS - 24 - ${#USER} - ${#HOSTNAME} ))
    for (( idx=${#rcd[@]}-1; idx >= 0; --idx )); do
        if (( ${rcd[$idx]} < $avl )); then
            PROMPT_DIRTRIM=$(( $idx + 1 ))
            return;
        fi
    done
    # if this happens its unsaveable anyway
    PROMPT_DIRTRIM=1
}

_PS1() {
    echo -nE '$(_optlf)'
    echo -nE '\[\e7$(printf "%*s" $(( $COLUMNS - 1 )) "$(date "+%F %T")")\e8\]'
    echo -nE '\[\e[1m\]\[\e[38;5;6m\]\u@\H'
    echo -nE '\[\e[0m\][\j]'
    echo -nE '\[\e[38;5;40m\]\w\[\e[0m\]'
    echo -nE '\n'
    echo -nE '$(_gitbranch)'
    echo -nE '\[\e[0m\]\$ '
}

PROMPT_COMMAND=_PRE_PROMPT

PS1="$(_PS1)"

export PATH="$PATH:$HOME/.local/bin"
